<?php

class AuthControllerTest extends \PHPUnit\Framework\TestCase
{

    /**
     * @var \Mockery\Mock
     */
    protected $baseControllerMock;

    /**
     * @var \Mockery\Mock
     */
    protected $authControllerMock;

    /**
     * @var \Mockery\Mock
     */
    protected $bladeMock;

    /**
     * @var \Mockery\Mock
     */
    protected $viewMock;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->baseControllerMock = Mockery::mock(\App\Controller\Controller::class)
            ->makePartial();

        $this->authControllerMock = Mockery::mock(\App\Controller\AuthController::class)
            ->makePartial();

        $this->bladeMock = Mockery::mock(\Jenssegers\Blade\Blade::class)
            ->makePartial();

        $this->viewMock = Mockery::mock(\Illuminate\Contracts\View\View::class)
            ->makePartial();
    }

    public function testIndex()
    {

        $this->bladeMock->shouldReceive('make')
            ->andReturn($this->viewMock);

        $this->authControllerMock->blade = $this->bladeMock;
        $renderView = $this->authControllerMock->index();
        $this->assertInstanceOf(\Illuminate\Contracts\View\View::class, $renderView);
    }
}